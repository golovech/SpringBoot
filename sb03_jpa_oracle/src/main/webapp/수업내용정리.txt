
[ orm과 jpa와 하이버네이트 설명 - 스프링부트4 ]
  
* ORM (기술)
  1. 쿼리가 필요없다. 단, 조인이 많아질 시 필요함
  2. 객체 간 연관관계가 자동으로 처리된다.
  3. 
  orm에서 사용하는 쿼리
  [jpql]
  작성법?
  
  select 멤버변수
  from 객체명
  
  ----------------------------------------------------------------------
  
* JPA (API)
  1. java에서 ORM을 구현하기 위한 표준 API.
  2. *** Entity : VO / DTO 의 역할 *******
     이제 엔티티~ 라고 한다. 
     JPA에서 데이터를 다룰 때 사용하는 클래스.
     
     ***************************
     - @Entity 어노테이션 사용 -> DB의 테이블과 자동매핑됨
       이 엔티티들을 관리하는 곳 : EntityManager (엔티티 매니저) 
                                       ㄴ 우리눈에 보이진 않는대.
                                     pom.xml에 jpa 추가하고, 프로펄티에서도 추가해줘야 사용가능
                                       
      --> DB에 해당 테이블을 만들지 않는데, 
          @Entity를 사용하면 테이블을 직접 만들어버림.
          
          @id 주면 -> PK가 id가 되는것임!!
          @GeneratedValue로 시퀀스 대신 1씩 증가하게 자동처리 가능...
          
          interface Repository : DAOImppl == Mapper의 역할.
          
                                       
  3.
  [ JPQL ]
  작성법?
  
  select 멤버변수
  from 객체명
  
  4. 영속성 컨텍스트
    jpa -> 영속성 컨텍스트에 저장 -> DB
    
    
 * Hibernate

 JPA의 기능을 구체적으로 구현.
JPA 표준 외에도 자체적인 고급 기능 제공 (예: 캐싱, 네이티브 쿼리 지원 등).
    
    